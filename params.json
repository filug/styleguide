{"name":"Styleguide","tagline":"Style guides for Google-originated open-source projects","body":"### Google C++ Style Guide fork\r\n[Google](https://google.com) made very helpful [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html). In addition small (small but still power full) [cpplint.py](https://github.com/google/styleguide/blob/gh-pages/cpplint/cpplint.py) [Python](https://www.python.org) script was prepared by them.\r\n\r\n### CMake support\r\nOriginal [styleguide repository](https://github.com/google/styleguide) from [Google](https://google.com) doesn't contain any support for [CMake](https://cmake.org) build system.\r\n\r\n[Here](https://github.com/filug/styleguide) required [CMake](https://cmake.org) module is available and it's quite easy to integrate [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html) with any [CMake](https://cmake.org) based project.\r\n\r\n#### Setup\r\n1. Clone [git@github.com:filug/styleguide.git](https://github.com/filug/styleguide) repository somewhere inside your project,\r\n2. Include _cpplint.cmake_ file in your root _CMakeLists.txt_ file, for example:\r\n`include(3rdParty/styleguide/cmake/cpplint.cmake)`\r\n3. Configure which project directories should be checked by [cpplint.py](https://github.com/google/styleguide/blob/gh-pages/cpplint/cpplint.py).\r\n\r\n#### Usage\r\nYou can run _Source code style verification_ via _make lint_ command.\r\nIn addition _source code style verification_ will be also checked when target _all_ will be built. \r\n\r\n#### Output\r\n    $ make\r\n    [100%] cpplint.py: Checking source code style\r\n    Done processing /home/filug/projects/test-prj/src/dir1/file1.c\r\n    Done processing /home/filug/projects/test-prj/src/dir1/file1.h\r\n    Done processing /home/filug/projects/test-prj/src/common.h\r\n    Total errors found: 0\r\n\r\n#### CTest\r\n[cpplint.cmake](3rdParty/styleguide/cmake/cpplint.cmake) module is also using [add_test](https://cmake.org/cmake/help/v3.0/command/add_test.html?highlight=add_test) command to add _lint_ to the [CTest framework](https://cmake.org/cmake/help/v3.0/manual/ctest.1.html#manual:ctest(1)).\r\n\r\nAny time when `make test` command is started [cpplint.py](https://github.com/google/styleguide/blob/gh-pages/cpplint/cpplint.py) is checking source code.\r\n\r\nAn output example is presented below.\r\n\r\n    $ make test\r\n    Running tests...\r\n    Test project /home/filug/projects/uleapp/build\r\n        Start 1: lint.src\r\n    1/1 Test #1: lint.src .........................   Passed    0.28 sec\r\n    \r\n    100% tests passed, 0 tests failed out of 1\r\n    \r\n    Total Test time (real) =   0.28 sec\r\n\r\n#### Configuration\r\nPlease read [cpplint.cmake](https://github.com/filug/styleguide/blob/master/cmake/cpplint.cmake) file to check which parameters can be configured.\r\n","google":"UA-70786087-1","note":"Don't delete this file! It's used internally to help with page regeneration."}